name: RECOVERY

on:
  workflow_dispatch:
    inputs:
      RECOVERY_URL:
        description: 'Recovery image URL (.img or .img.lz4)'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check Out
      uses: actions/checkout@v3

    - name: Prepare the environment
      run: |
        sudo apt update
        sudo apt install -y git wget lz4 tar openssl python3 python3-pip

    - name: Fetch recovery image
      run: |
        echo "Downloading recovery image..."
        wget "${{ github.event.inputs.RECOVERY_URL }}" -O recovery.img.lz4 || true
        # If the URL ends with .lz4, decompress it
        if [[ "${{ github.event.inputs.RECOVERY_URL }}" == *.lz4 ]]; then
          echo "Decompressing recovery.img.lz4..."
          lz4 -d recovery.img.lz4 recovery.img
        else
          mv recovery.img.lz4 recovery.img
        fi
        ls -lh recovery.img

    - name: Patch Process-1
      run: |
        chmod a+x script1.sh
        chmod a+x magiskboot
        ./script1.sh || true

    - name: Patch Process-2
      run: |
        chmod a+x script2.sh
        ./script2.sh || true
        python3 avbtool extract_public_key --key phh.pem --output phh.pub.bin
        python3 avbtool add_hash_footer \
          --partition_name recovery \
          --partition_size $(wc -c < recovery.img) \
          --image recovery-patched.img \
          --key phh.pem \
          --algorithm SHA256_RSA4096
        mkdir -p output
        mv recovery-patched.img output/recovery.img
        cd output
        tar cvf fastbootd-recovery.tar recovery.img
        md5sum -t fastbootd-recovery.tar >> fastbootd-recovery.tar
        mv fastbootd-recovery.tar fastbootd-recovery.tar.md5

    - name: Upload Patched Recovery
      uses: actions/upload-artifact@v4
      with:
        path: output/*.md5
        name: Patched-Recovery
